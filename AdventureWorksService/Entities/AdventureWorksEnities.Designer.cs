//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace AdventureWorksService.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AdventureWorksEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AdventureWorksEntities object using the connection string found in the 'AdventureWorksEntities' section of the application configuration file.
        /// </summary>
        public AdventureWorksEntities() : base("name=AdventureWorksEntities", "AdventureWorksEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AdventureWorksEntities object.
        /// </summary>
        public AdventureWorksEntities(string connectionString) : base(connectionString, "AdventureWorksEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AdventureWorksEntities object.
        /// </summary>
        public AdventureWorksEntities(EntityConnection connection) : base(connection, "AdventureWorksEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductModel> ProductModels
        {
            get
            {
                if ((_ProductModels == null))
                {
                    _ProductModels = base.CreateObjectSet<ProductModel>("ProductModels");
                }
                return _ProductModels;
            }
        }
        private ObjectSet<ProductModel> _ProductModels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductSearchItem> ProductSearchItems
        {
            get
            {
                if ((_ProductSearchItems == null))
                {
                    _ProductSearchItems = base.CreateObjectSet<ProductSearchItem>("ProductSearchItems");
                }
                return _ProductSearchItems;
            }
        }
        private ObjectSet<ProductSearchItem> _ProductSearchItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductSubcategory> ProductSubcategories
        {
            get
            {
                if ((_ProductSubcategories == null))
                {
                    _ProductSubcategories = base.CreateObjectSet<ProductSubcategory>("ProductSubcategories");
                }
                return _ProductSubcategories;
            }
        }
        private ObjectSet<ProductSubcategory> _ProductSubcategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionHistory> TransactionHistories
        {
            get
            {
                if ((_TransactionHistories == null))
                {
                    _TransactionHistories = base.CreateObjectSet<TransactionHistory>("TransactionHistories");
                }
                return _TransactionHistories;
            }
        }
        private ObjectSet<TransactionHistory> _TransactionHistories;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductModels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductModels(ProductModel productModel)
        {
            base.AddObject("ProductModels", productModel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductSearchItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductSearchItems(ProductSearchItem productSearchItem)
        {
            base.AddObject("ProductSearchItems", productSearchItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductSubcategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductSubcategories(ProductSubcategory productSubcategory)
        {
            base.AddObject("ProductSubcategories", productSubcategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionHistories(TransactionHistory transactionHistory)
        {
            base.AddObject("TransactionHistories", transactionHistory);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="productId">No Metadata Documentation available.</param>
        /// <param name="productName">No Metadata Documentation available.</param>
        /// <param name="productNumber">No Metadata Documentation available.</param>
        /// <param name="listPrice">No Metadata Documentation available.</param>
        /// <param name="standardCost">No Metadata Documentation available.</param>
        /// <param name="productSubcategoryId">No Metadata Documentation available.</param>
        /// <param name="productModelId">No Metadata Documentation available.</param>
        public int updateProduct(Nullable<global::System.Int32> productId, global::System.String productName, global::System.String productNumber, Nullable<global::System.Decimal> listPrice, Nullable<global::System.Decimal> standardCost, Nullable<global::System.Int32> productSubcategoryId, Nullable<global::System.Int32> productModelId)
        {
            ObjectParameter productIdParameter;
            if (productId.HasValue)
            {
                productIdParameter = new ObjectParameter("productId", productId);
            }
            else
            {
                productIdParameter = new ObjectParameter("productId", typeof(global::System.Int32));
            }
    
            ObjectParameter productNameParameter;
            if (productName != null)
            {
                productNameParameter = new ObjectParameter("productName", productName);
            }
            else
            {
                productNameParameter = new ObjectParameter("productName", typeof(global::System.String));
            }
    
            ObjectParameter productNumberParameter;
            if (productNumber != null)
            {
                productNumberParameter = new ObjectParameter("productNumber", productNumber);
            }
            else
            {
                productNumberParameter = new ObjectParameter("productNumber", typeof(global::System.String));
            }
    
            ObjectParameter listPriceParameter;
            if (listPrice.HasValue)
            {
                listPriceParameter = new ObjectParameter("listPrice", listPrice);
            }
            else
            {
                listPriceParameter = new ObjectParameter("listPrice", typeof(global::System.Decimal));
            }
    
            ObjectParameter standardCostParameter;
            if (standardCost.HasValue)
            {
                standardCostParameter = new ObjectParameter("standardCost", standardCost);
            }
            else
            {
                standardCostParameter = new ObjectParameter("standardCost", typeof(global::System.Decimal));
            }
    
            ObjectParameter productSubcategoryIdParameter;
            if (productSubcategoryId.HasValue)
            {
                productSubcategoryIdParameter = new ObjectParameter("productSubcategoryId", productSubcategoryId);
            }
            else
            {
                productSubcategoryIdParameter = new ObjectParameter("productSubcategoryId", typeof(global::System.Int32));
            }
    
            ObjectParameter productModelIdParameter;
            if (productModelId.HasValue)
            {
                productModelIdParameter = new ObjectParameter("productModelId", productModelId);
            }
            else
            {
                productModelIdParameter = new ObjectParameter("productModelId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("updateProduct", productIdParameter, productNameParameter, productNumberParameter, listPriceParameter, standardCostParameter, productSubcategoryIdParameter, productModelIdParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorksModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="productNumber">Initial value of the ProductNumber property.</param>
        /// <param name="listPrice">Initial value of the ListPrice property.</param>
        /// <param name="standardCost">Initial value of the StandardCost property.</param>
        public static Product CreateProduct(global::System.Int32 productID, global::System.String name, global::System.String productNumber, global::System.Decimal listPrice, global::System.Decimal standardCost)
        {
            Product product = new Product();
            product.ProductID = productID;
            product.Name = name;
            product.ProductNumber = productNumber;
            product.ListPrice = listPrice;
            product.StandardCost = standardCost;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductNumber
        {
            get
            {
                return _ProductNumber;
            }
            set
            {
                OnProductNumberChanging(value);
                ReportPropertyChanging("ProductNumber");
                _ProductNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductNumber");
                OnProductNumberChanged();
            }
        }
        private global::System.String _ProductNumber;
        partial void OnProductNumberChanging(global::System.String value);
        partial void OnProductNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ListPrice
        {
            get
            {
                return _ListPrice;
            }
            set
            {
                OnListPriceChanging(value);
                ReportPropertyChanging("ListPrice");
                _ListPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListPrice");
                OnListPriceChanged();
            }
        }
        private global::System.Decimal _ListPrice;
        partial void OnListPriceChanging(global::System.Decimal value);
        partial void OnListPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal StandardCost
        {
            get
            {
                return _StandardCost;
            }
            set
            {
                OnStandardCostChanging(value);
                ReportPropertyChanging("StandardCost");
                _StandardCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardCost");
                OnStandardCostChanged();
            }
        }
        private global::System.Decimal _StandardCost;
        partial void OnStandardCostChanging(global::System.Decimal value);
        partial void OnStandardCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductSubcategoryID
        {
            get
            {
                return _ProductSubcategoryID;
            }
            set
            {
                OnProductSubcategoryIDChanging(value);
                ReportPropertyChanging("ProductSubcategoryID");
                _ProductSubcategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductSubcategoryID");
                OnProductSubcategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductSubcategoryID;
        partial void OnProductSubcategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductSubcategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductModelID
        {
            get
            {
                return _ProductModelID;
            }
            set
            {
                OnProductModelIDChanging(value);
                ReportPropertyChanging("ProductModelID");
                _ProductModelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductModelID");
                OnProductModelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductModelID;
        partial void OnProductModelIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductModelIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorksModel", Name="ProductModel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductModel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductModel object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="productModelID">Initial value of the ProductModelID property.</param>
        public static ProductModel CreateProductModel(global::System.String name, global::System.Int32 productModelID)
        {
            ProductModel productModel = new ProductModel();
            productModel.Name = name;
            productModel.ProductModelID = productModelID;
            return productModel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductModelID
        {
            get
            {
                return _ProductModelID;
            }
            set
            {
                if (_ProductModelID != value)
                {
                    OnProductModelIDChanging(value);
                    ReportPropertyChanging("ProductModelID");
                    _ProductModelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductModelID");
                    OnProductModelIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductModelID;
        partial void OnProductModelIDChanging(global::System.Int32 value);
        partial void OnProductModelIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorksModel", Name="ProductSearchItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductSearchItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductSearchItem object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        /// <param name="productNumber">Initial value of the ProductNumber property.</param>
        /// <param name="productCategory">Initial value of the ProductCategory property.</param>
        /// <param name="productModel">Initial value of the ProductModel property.</param>
        /// <param name="productSubcategory">Initial value of the ProductSubcategory property.</param>
        public static ProductSearchItem CreateProductSearchItem(global::System.Int32 productId, global::System.String productName, global::System.String productNumber, global::System.String productCategory, global::System.String productModel, global::System.String productSubcategory)
        {
            ProductSearchItem productSearchItem = new ProductSearchItem();
            productSearchItem.ProductId = productId;
            productSearchItem.ProductName = productName;
            productSearchItem.ProductNumber = productNumber;
            productSearchItem.ProductCategory = productCategory;
            productSearchItem.ProductModel = productModel;
            productSearchItem.ProductSubcategory = productSubcategory;
            return productSearchItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                if (_ProductName != value)
                {
                    OnProductNameChanging(value);
                    ReportPropertyChanging("ProductName");
                    _ProductName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductName");
                    OnProductNameChanged();
                }
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductNumber
        {
            get
            {
                return _ProductNumber;
            }
            set
            {
                if (_ProductNumber != value)
                {
                    OnProductNumberChanging(value);
                    ReportPropertyChanging("ProductNumber");
                    _ProductNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductNumber");
                    OnProductNumberChanged();
                }
            }
        }
        private global::System.String _ProductNumber;
        partial void OnProductNumberChanging(global::System.String value);
        partial void OnProductNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductCategory
        {
            get
            {
                return _ProductCategory;
            }
            set
            {
                if (_ProductCategory != value)
                {
                    OnProductCategoryChanging(value);
                    ReportPropertyChanging("ProductCategory");
                    _ProductCategory = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductCategory");
                    OnProductCategoryChanged();
                }
            }
        }
        private global::System.String _ProductCategory;
        partial void OnProductCategoryChanging(global::System.String value);
        partial void OnProductCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductModel
        {
            get
            {
                return _ProductModel;
            }
            set
            {
                if (_ProductModel != value)
                {
                    OnProductModelChanging(value);
                    ReportPropertyChanging("ProductModel");
                    _ProductModel = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductModel");
                    OnProductModelChanged();
                }
            }
        }
        private global::System.String _ProductModel;
        partial void OnProductModelChanging(global::System.String value);
        partial void OnProductModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductSubcategory
        {
            get
            {
                return _ProductSubcategory;
            }
            set
            {
                if (_ProductSubcategory != value)
                {
                    OnProductSubcategoryChanging(value);
                    ReportPropertyChanging("ProductSubcategory");
                    _ProductSubcategory = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductSubcategory");
                    OnProductSubcategoryChanged();
                }
            }
        }
        private global::System.String _ProductSubcategory;
        partial void OnProductSubcategoryChanging(global::System.String value);
        partial void OnProductSubcategoryChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorksModel", Name="ProductSubcategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductSubcategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductSubcategory object.
        /// </summary>
        /// <param name="productSubcategoryID">Initial value of the ProductSubcategoryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProductSubcategory CreateProductSubcategory(global::System.Int32 productSubcategoryID, global::System.String name)
        {
            ProductSubcategory productSubcategory = new ProductSubcategory();
            productSubcategory.ProductSubcategoryID = productSubcategoryID;
            productSubcategory.Name = name;
            return productSubcategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductSubcategoryID
        {
            get
            {
                return _ProductSubcategoryID;
            }
            set
            {
                if (_ProductSubcategoryID != value)
                {
                    OnProductSubcategoryIDChanging(value);
                    ReportPropertyChanging("ProductSubcategoryID");
                    _ProductSubcategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductSubcategoryID");
                    OnProductSubcategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductSubcategoryID;
        partial void OnProductSubcategoryIDChanging(global::System.Int32 value);
        partial void OnProductSubcategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorksModel", Name="TransactionHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionHistory object.
        /// </summary>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="transactionType">Initial value of the TransactionType property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="actualCost">Initial value of the ActualCost property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static TransactionHistory CreateTransactionHistory(global::System.Int32 transactionID, global::System.Int32 productID, global::System.DateTime transactionDate, global::System.String transactionType, global::System.Int32 quantity, global::System.Decimal actualCost, global::System.DateTime modifiedDate)
        {
            TransactionHistory transactionHistory = new TransactionHistory();
            transactionHistory.TransactionID = transactionID;
            transactionHistory.ProductID = productID;
            transactionHistory.TransactionDate = transactionDate;
            transactionHistory.TransactionType = transactionType;
            transactionHistory.Quantity = quantity;
            transactionHistory.ActualCost = actualCost;
            transactionHistory.ModifiedDate = modifiedDate;
            return transactionHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                if (_TransactionID != value)
                {
                    OnTransactionIDChanging(value);
                    ReportPropertyChanging("TransactionID");
                    _TransactionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionID");
                    OnTransactionIDChanged();
                }
            }
        }
        private global::System.Int32 _TransactionID;
        partial void OnTransactionIDChanging(global::System.Int32 value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                if (_TransactionDate != value)
                {
                    OnTransactionDateChanging(value);
                    ReportPropertyChanging("TransactionDate");
                    _TransactionDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionDate");
                    OnTransactionDateChanged();
                }
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionType
        {
            get
            {
                return _TransactionType;
            }
            set
            {
                if (_TransactionType != value)
                {
                    OnTransactionTypeChanging(value);
                    ReportPropertyChanging("TransactionType");
                    _TransactionType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionType");
                    OnTransactionTypeChanged();
                }
            }
        }
        private global::System.String _TransactionType;
        partial void OnTransactionTypeChanging(global::System.String value);
        partial void OnTransactionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    OnQuantityChanging(value);
                    ReportPropertyChanging("Quantity");
                    _Quantity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Quantity");
                    OnQuantityChanged();
                }
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ActualCost
        {
            get
            {
                return _ActualCost;
            }
            set
            {
                if (_ActualCost != value)
                {
                    OnActualCostChanging(value);
                    ReportPropertyChanging("ActualCost");
                    _ActualCost = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualCost");
                    OnActualCostChanged();
                }
            }
        }
        private global::System.Decimal _ActualCost;
        partial void OnActualCostChanging(global::System.Decimal value);
        partial void OnActualCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                if (_ModifiedDate != value)
                {
                    OnModifiedDateChanging(value);
                    ReportPropertyChanging("ModifiedDate");
                    _ModifiedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModifiedDate");
                    OnModifiedDateChanged();
                }
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
    }

    #endregion

    
}
